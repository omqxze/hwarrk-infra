name: hwarrk-back
on:
  pull_request_target:
    types: [opened, synchronize, closed]
    branches: [dev]
    paths:
      - '**'

jobs:
  CI:
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    steps:
      - name: 1. checkout
        uses: actions/checkout@v4

      - name: 2. Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 3. Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 4. Copy Application-dev.yml
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > ./src/main/resources/application.yml
          touch ./src/main/resources/application-dev.yml
          echo "${{ secrets.APPLICATION_DEV_YML }}" | base64 --decode > ./src/main/resources/application-dev.yml
        shell: bash

      - name: 5. Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 6. Build with Gradle
        run: ./gradlew clean build -x test

  CD:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: 1. checkout
        uses: actions/checkout@v4

      - name: 2. Configure AWS Credentials
        id: credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: 3. Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: 4. Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: 5. Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 6. Copy Application-dev.yml
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > ./src/main/resources/application.yml
          touch ./src/main/resources/application-dev.yml
          echo "${{ secrets.APPLICATION_DEV_YML }}" | base64 --decode > ./src/main/resources/application-dev.yml
        shell: bash

      - name: 7. Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 8. Build with Gradle
        run: ./gradlew clean build -x test

      - name: 9. docker build & push
        run: |
          docker build -f Dockerfile --tag ${{ secrets.REGISTRY }}/${{ vars.REPOSITORY }}:latest .
          docker push ${{ secrets.REGISTRY }}/${{ vars.REPOSITORY }}:latest
